{"ast":null,"code":"/*!\r\n * Isotope v3.0.6\r\n *\r\n * Licensed GPLv3 for open source use\r\n * or Isotope Commercial License for commercial use\r\n *\r\n * https://isotope.metafizzy.co\r\n * Copyright 2010-2018 Metafizzy\r\n */\n(function (window, factory) {\n  // universal module definition\n\n  /* jshint strict: false */\n\n  /*globals define, module, require */\n  if (typeof define == 'function' && define.amd) {\n    // AMD\n    define(['outlayer/outlayer', 'get-size/get-size', 'desandro-matches-selector/matches-selector', 'fizzy-ui-utils/utils', './item', './layout-mode', // include default layout modes\n    './layout-modes/masonry', './layout-modes/fit-rows', './layout-modes/vertical'], function (Outlayer, getSize, matchesSelector, utils, Item, LayoutMode) {\n      return factory(window, Outlayer, getSize, matchesSelector, utils, Item, LayoutMode);\n    });\n  } else if (typeof module == 'object' && module.exports) {\n    // CommonJS\n    module.exports = factory(window, require('outlayer'), require('get-size'), require('desandro-matches-selector'), require('fizzy-ui-utils'), require('./item'), require('./layout-mode'), // include default layout modes\n    require('./layout-modes/masonry'), require('./layout-modes/fit-rows'), require('./layout-modes/vertical'));\n  } else {\n    // browser global\n    window.Isotope = factory(window, window.Outlayer, window.getSize, window.matchesSelector, window.fizzyUIUtils, window.Isotope.Item, window.Isotope.LayoutMode);\n  }\n})(window, function factory(window, Outlayer, getSize, matchesSelector, utils, Item, LayoutMode) {\n  'use strict'; // -------------------------- vars -------------------------- //\n\n  var jQuery = window.jQuery; // -------------------------- helpers -------------------------- //\n\n  var trim = String.prototype.trim ? function (str) {\n    return str.trim();\n  } : function (str) {\n    return str.replace(/^\\s+|\\s+$/g, '');\n  }; // -------------------------- isotopeDefinition -------------------------- //\n  // create an Outlayer layout class\n\n  var Isotope = Outlayer.create('isotope', {\n    layoutMode: 'masonry',\n    isJQueryFiltering: true,\n    sortAscending: true\n  });\n  Isotope.Item = Item;\n  Isotope.LayoutMode = LayoutMode;\n  var proto = Isotope.prototype;\n\n  proto._create = function () {\n    this.itemGUID = 0; // functions that sort items\n\n    this._sorters = {};\n\n    this._getSorters(); // call super\n\n\n    Outlayer.prototype._create.call(this); // create layout modes\n\n\n    this.modes = {}; // start filteredItems with all items\n\n    this.filteredItems = this.items; // keep of track of sortBys\n\n    this.sortHistory = ['original-order']; // create from registered layout modes\n\n    for (var name in LayoutMode.modes) {\n      this._initLayoutMode(name);\n    }\n  };\n\n  proto.reloadItems = function () {\n    // reset item ID counter\n    this.itemGUID = 0; // call super\n\n    Outlayer.prototype.reloadItems.call(this);\n  };\n\n  proto._itemize = function () {\n    var items = Outlayer.prototype._itemize.apply(this, arguments); // assign ID for original-order\n\n\n    for (var i = 0; i < items.length; i++) {\n      var item = items[i];\n      item.id = this.itemGUID++;\n    }\n\n    this._updateItemsSortData(items);\n\n    return items;\n  }; // -------------------------- layout -------------------------- //\n\n\n  proto._initLayoutMode = function (name) {\n    var Mode = LayoutMode.modes[name]; // set mode options\n    // HACK extend initial options, back-fill in default options\n\n    var initialOpts = this.options[name] || {};\n    this.options[name] = Mode.options ? utils.extend(Mode.options, initialOpts) : initialOpts; // init layout mode instance\n\n    this.modes[name] = new Mode(this);\n  };\n\n  proto.layout = function () {\n    // if first time doing layout, do all magic\n    if (!this._isLayoutInited && this._getOption('initLayout')) {\n      this.arrange();\n      return;\n    }\n\n    this._layout();\n  }; // private method to be used in layout() & magic()\n\n\n  proto._layout = function () {\n    // don't animate first layout\n    var isInstant = this._getIsInstant(); // layout flow\n\n\n    this._resetLayout();\n\n    this._manageStamps();\n\n    this.layoutItems(this.filteredItems, isInstant); // flag for initalized\n\n    this._isLayoutInited = true;\n  }; // filter + sort + layout\n\n\n  proto.arrange = function (opts) {\n    // set any options pass\n    this.option(opts);\n\n    this._getIsInstant(); // filter, sort, and layout\n    // filter\n\n\n    var filtered = this._filter(this.items);\n\n    this.filteredItems = filtered.matches;\n\n    this._bindArrangeComplete();\n\n    if (this._isInstant) {\n      this._noTransition(this._hideReveal, [filtered]);\n    } else {\n      this._hideReveal(filtered);\n    }\n\n    this._sort();\n\n    this._layout();\n  }; // alias to _init for main plugin method\n\n\n  proto._init = proto.arrange;\n\n  proto._hideReveal = function (filtered) {\n    this.reveal(filtered.needReveal);\n    this.hide(filtered.needHide);\n  }; // HACK\n  // Don't animate/transition first layout\n  // Or don't animate/transition other layouts\n\n\n  proto._getIsInstant = function () {\n    var isLayoutInstant = this._getOption('layoutInstant');\n\n    var isInstant = isLayoutInstant !== undefined ? isLayoutInstant : !this._isLayoutInited;\n    this._isInstant = isInstant;\n    return isInstant;\n  }; // listen for layoutComplete, hideComplete and revealComplete\n  // to trigger arrangeComplete\n\n\n  proto._bindArrangeComplete = function () {\n    // listen for 3 events to trigger arrangeComplete\n    var isLayoutComplete, isHideComplete, isRevealComplete;\n\n    var _this = this;\n\n    function arrangeParallelCallback() {\n      if (isLayoutComplete && isHideComplete && isRevealComplete) {\n        _this.dispatchEvent('arrangeComplete', null, [_this.filteredItems]);\n      }\n    }\n\n    this.once('layoutComplete', function () {\n      isLayoutComplete = true;\n      arrangeParallelCallback();\n    });\n    this.once('hideComplete', function () {\n      isHideComplete = true;\n      arrangeParallelCallback();\n    });\n    this.once('revealComplete', function () {\n      isRevealComplete = true;\n      arrangeParallelCallback();\n    });\n  }; // -------------------------- filter -------------------------- //\n\n\n  proto._filter = function (items) {\n    var filter = this.options.filter;\n    filter = filter || '*';\n    var matches = [];\n    var hiddenMatched = [];\n    var visibleUnmatched = [];\n\n    var test = this._getFilterTest(filter); // test each item\n\n\n    for (var i = 0; i < items.length; i++) {\n      var item = items[i];\n\n      if (item.isIgnored) {\n        continue;\n      } // add item to either matched or unmatched group\n\n\n      var isMatched = test(item); // item.isFilterMatched = isMatched;\n      // add to matches if its a match\n\n      if (isMatched) {\n        matches.push(item);\n      } // add to additional group if item needs to be hidden or revealed\n\n\n      if (isMatched && item.isHidden) {\n        hiddenMatched.push(item);\n      } else if (!isMatched && !item.isHidden) {\n        visibleUnmatched.push(item);\n      }\n    } // return collections of items to be manipulated\n\n\n    return {\n      matches: matches,\n      needReveal: hiddenMatched,\n      needHide: visibleUnmatched\n    };\n  }; // get a jQuery, function, or a matchesSelector test given the filter\n\n\n  proto._getFilterTest = function (filter) {\n    if (jQuery && this.options.isJQueryFiltering) {\n      // use jQuery\n      return function (item) {\n        return jQuery(item.element).is(filter);\n      };\n    }\n\n    if (typeof filter == 'function') {\n      // use filter as function\n      return function (item) {\n        return filter(item.element);\n      };\n    } // default, use filter as selector string\n\n\n    return function (item) {\n      return matchesSelector(item.element, filter);\n    };\n  }; // -------------------------- sorting -------------------------- //\n\n  /**\r\n   * @params {Array} elems\r\n   * @public\r\n   */\n\n\n  proto.updateSortData = function (elems) {\n    // get items\n    var items;\n\n    if (elems) {\n      elems = utils.makeArray(elems);\n      items = this.getItems(elems);\n    } else {\n      // update all items if no elems provided\n      items = this.items;\n    }\n\n    this._getSorters();\n\n    this._updateItemsSortData(items);\n  };\n\n  proto._getSorters = function () {\n    var getSortData = this.options.getSortData;\n\n    for (var key in getSortData) {\n      var sorter = getSortData[key];\n      this._sorters[key] = mungeSorter(sorter);\n    }\n  };\n  /**\r\n   * @params {Array} items - of Isotope.Items\r\n   * @private\r\n   */\n\n\n  proto._updateItemsSortData = function (items) {\n    // do not update if no items\n    var len = items && items.length;\n\n    for (var i = 0; len && i < len; i++) {\n      var item = items[i];\n      item.updateSortData();\n    }\n  }; // ----- munge sorter ----- //\n  // encapsulate this, as we just need mungeSorter\n  // other functions in here are just for munging\n\n\n  var mungeSorter = function () {\n    // add a magic layer to sorters for convienent shorthands\n    // `.foo-bar` will use the text of .foo-bar querySelector\n    // `[foo-bar]` will use attribute\n    // you can also add parser\n    // `.foo-bar parseInt` will parse that as a number\n    function mungeSorter(sorter) {\n      // if not a string, return function or whatever it is\n      if (typeof sorter != 'string') {\n        return sorter;\n      } // parse the sorter string\n\n\n      var args = trim(sorter).split(' ');\n      var query = args[0]; // check if query looks like [an-attribute]\n\n      var attrMatch = query.match(/^\\[(.+)\\]$/);\n      var attr = attrMatch && attrMatch[1];\n      var getValue = getValueGetter(attr, query); // use second argument as a parser\n\n      var parser = Isotope.sortDataParsers[args[1]]; // parse the value, if there was a parser\n\n      sorter = parser ? function (elem) {\n        return elem && parser(getValue(elem));\n      } : // otherwise just return value\n      function (elem) {\n        return elem && getValue(elem);\n      };\n      return sorter;\n    } // get an attribute getter, or get text of the querySelector\n\n\n    function getValueGetter(attr, query) {\n      // if query looks like [foo-bar], get attribute\n      if (attr) {\n        return function getAttribute(elem) {\n          return elem.getAttribute(attr);\n        };\n      } // otherwise, assume its a querySelector, and get its text\n\n\n      return function getChildText(elem) {\n        var child = elem.querySelector(query);\n        return child && child.textContent;\n      };\n    }\n\n    return mungeSorter;\n  }(); // parsers used in getSortData shortcut strings\n\n\n  Isotope.sortDataParsers = {\n    'parseInt': function (val) {\n      return parseInt(val, 10);\n    },\n    'parseFloat': function (val) {\n      return parseFloat(val);\n    }\n  }; // ----- sort method ----- //\n  // sort filteredItem order\n\n  proto._sort = function () {\n    if (!this.options.sortBy) {\n      return;\n    } // keep track of sortBy History\n\n\n    var sortBys = utils.makeArray(this.options.sortBy);\n\n    if (!this._getIsSameSortBy(sortBys)) {\n      // concat all sortBy and sortHistory, add to front, oldest goes in last\n      this.sortHistory = sortBys.concat(this.sortHistory);\n    } // sort magic\n\n\n    var itemSorter = getItemSorter(this.sortHistory, this.options.sortAscending);\n    this.filteredItems.sort(itemSorter);\n  }; // check if sortBys is same as start of sortHistory\n\n\n  proto._getIsSameSortBy = function (sortBys) {\n    for (var i = 0; i < sortBys.length; i++) {\n      if (sortBys[i] != this.sortHistory[i]) {\n        return false;\n      }\n    }\n\n    return true;\n  }; // returns a function used for sorting\n\n\n  function getItemSorter(sortBys, sortAsc) {\n    return function sorter(itemA, itemB) {\n      // cycle through all sortKeys\n      for (var i = 0; i < sortBys.length; i++) {\n        var sortBy = sortBys[i];\n        var a = itemA.sortData[sortBy];\n        var b = itemB.sortData[sortBy];\n\n        if (a > b || a < b) {\n          // if sortAsc is an object, use the value given the sortBy key\n          var isAscending = sortAsc[sortBy] !== undefined ? sortAsc[sortBy] : sortAsc;\n          var direction = isAscending ? 1 : -1;\n          return (a > b ? 1 : -1) * direction;\n        }\n      }\n\n      return 0;\n    };\n  } // -------------------------- methods -------------------------- //\n  // get layout mode\n\n\n  proto._mode = function () {\n    var layoutMode = this.options.layoutMode;\n    var mode = this.modes[layoutMode];\n\n    if (!mode) {\n      // TODO console.error\n      throw new Error('No layout mode: ' + layoutMode);\n    } // HACK sync mode's options\n    // any options set after init for layout mode need to be synced\n\n\n    mode.options = this.options[layoutMode];\n    return mode;\n  };\n\n  proto._resetLayout = function () {\n    // trigger original reset layout\n    Outlayer.prototype._resetLayout.call(this);\n\n    this._mode()._resetLayout();\n  };\n\n  proto._getItemLayoutPosition = function (item) {\n    return this._mode()._getItemLayoutPosition(item);\n  };\n\n  proto._manageStamp = function (stamp) {\n    this._mode()._manageStamp(stamp);\n  };\n\n  proto._getContainerSize = function () {\n    return this._mode()._getContainerSize();\n  };\n\n  proto.needsResizeLayout = function () {\n    return this._mode().needsResizeLayout();\n  }; // -------------------------- adding & removing -------------------------- //\n  // HEADS UP overwrites default Outlayer appended\n\n\n  proto.appended = function (elems) {\n    var items = this.addItems(elems);\n\n    if (!items.length) {\n      return;\n    } // filter, layout, reveal new items\n\n\n    var filteredItems = this._filterRevealAdded(items); // add to filteredItems\n\n\n    this.filteredItems = this.filteredItems.concat(filteredItems);\n  }; // HEADS UP overwrites default Outlayer prepended\n\n\n  proto.prepended = function (elems) {\n    var items = this._itemize(elems);\n\n    if (!items.length) {\n      return;\n    } // start new layout\n\n\n    this._resetLayout();\n\n    this._manageStamps(); // filter, layout, reveal new items\n\n\n    var filteredItems = this._filterRevealAdded(items); // layout previous items\n\n\n    this.layoutItems(this.filteredItems); // add to items and filteredItems\n\n    this.filteredItems = filteredItems.concat(this.filteredItems);\n    this.items = items.concat(this.items);\n  };\n\n  proto._filterRevealAdded = function (items) {\n    var filtered = this._filter(items);\n\n    this.hide(filtered.needHide); // reveal all new items\n\n    this.reveal(filtered.matches); // layout new items, no transition\n\n    this.layoutItems(filtered.matches, true);\n    return filtered.matches;\n  };\n  /**\r\n   * Filter, sort, and layout newly-appended item elements\r\n   * @param {Array or NodeList or Element} elems\r\n   */\n\n\n  proto.insert = function (elems) {\n    var items = this.addItems(elems);\n\n    if (!items.length) {\n      return;\n    } // append item elements\n\n\n    var i, item;\n    var len = items.length;\n\n    for (i = 0; i < len; i++) {\n      item = items[i];\n      this.element.appendChild(item.element);\n    } // filter new stuff\n\n\n    var filteredInsertItems = this._filter(items).matches; // set flag\n\n\n    for (i = 0; i < len; i++) {\n      items[i].isLayoutInstant = true;\n    }\n\n    this.arrange(); // reset flag\n\n    for (i = 0; i < len; i++) {\n      delete items[i].isLayoutInstant;\n    }\n\n    this.reveal(filteredInsertItems);\n  };\n\n  var _remove = proto.remove;\n\n  proto.remove = function (elems) {\n    elems = utils.makeArray(elems);\n    var removeItems = this.getItems(elems); // do regular thing\n\n    _remove.call(this, elems); // bail if no items to remove\n\n\n    var len = removeItems && removeItems.length; // remove elems from filteredItems\n\n    for (var i = 0; len && i < len; i++) {\n      var item = removeItems[i]; // remove item from collection\n\n      utils.removeFrom(this.filteredItems, item);\n    }\n  };\n\n  proto.shuffle = function () {\n    // update random sortData\n    for (var i = 0; i < this.items.length; i++) {\n      var item = this.items[i];\n      item.sortData.random = Math.random();\n    }\n\n    this.options.sortBy = 'random';\n\n    this._sort();\n\n    this._layout();\n  };\n  /**\r\n   * trigger fn without transition\r\n   * kind of hacky to have this in the first place\r\n   * @param {Function} fn\r\n   * @param {Array} args\r\n   * @returns ret\r\n   * @private\r\n   */\n\n\n  proto._noTransition = function (fn, args) {\n    // save transitionDuration before disabling\n    var transitionDuration = this.options.transitionDuration; // disable transition\n\n    this.options.transitionDuration = 0; // do it\n\n    var returnValue = fn.apply(this, args); // re-enable transition for reveal\n\n    this.options.transitionDuration = transitionDuration;\n    return returnValue;\n  }; // ----- helper methods ----- //\n\n  /**\r\n   * getter method for getting filtered item elements\r\n   * @returns {Array} elems - collection of item elements\r\n   */\n\n\n  proto.getFilteredItemElements = function () {\n    return this.filteredItems.map(function (item) {\n      return item.element;\n    });\n  }; // -----  ----- //\n\n\n  return Isotope;\n});","map":{"version":3,"sources":["C:/Users/Reign/Desktop/NolaBroadband/NolaBroadband/node_modules/isotope-layout/js/isotope.js"],"names":["window","factory","define","amd","Outlayer","getSize","matchesSelector","utils","Item","LayoutMode","module","exports","require","Isotope","fizzyUIUtils","jQuery","trim","String","prototype","str","replace","create","layoutMode","isJQueryFiltering","sortAscending","proto","_create","itemGUID","_sorters","_getSorters","call","modes","filteredItems","items","sortHistory","name","_initLayoutMode","reloadItems","_itemize","apply","arguments","i","length","item","id","_updateItemsSortData","Mode","initialOpts","options","extend","layout","_isLayoutInited","_getOption","arrange","_layout","isInstant","_getIsInstant","_resetLayout","_manageStamps","layoutItems","opts","option","filtered","_filter","matches","_bindArrangeComplete","_isInstant","_noTransition","_hideReveal","_sort","_init","reveal","needReveal","hide","needHide","isLayoutInstant","undefined","isLayoutComplete","isHideComplete","isRevealComplete","_this","arrangeParallelCallback","dispatchEvent","once","filter","hiddenMatched","visibleUnmatched","test","_getFilterTest","isIgnored","isMatched","push","isHidden","element","is","updateSortData","elems","makeArray","getItems","getSortData","key","sorter","mungeSorter","len","args","split","query","attrMatch","match","attr","getValue","getValueGetter","parser","sortDataParsers","elem","getAttribute","getChildText","child","querySelector","textContent","val","parseInt","parseFloat","sortBy","sortBys","_getIsSameSortBy","concat","itemSorter","getItemSorter","sort","sortAsc","itemA","itemB","a","sortData","b","isAscending","direction","_mode","mode","Error","_getItemLayoutPosition","_manageStamp","stamp","_getContainerSize","needsResizeLayout","appended","addItems","_filterRevealAdded","prepended","insert","appendChild","filteredInsertItems","_remove","remove","removeItems","removeFrom","shuffle","random","Math","fn","transitionDuration","returnValue","getFilteredItemElements","map"],"mappings":"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","sourcesContent":["/*!\r\n * Isotope v3.0.6\r\n *\r\n * Licensed GPLv3 for open source use\r\n * or Isotope Commercial License for commercial use\r\n *\r\n * https://isotope.metafizzy.co\r\n * Copyright 2010-2018 Metafizzy\r\n */\r\n\r\n( function( window, factory ) {\r\n  // universal module definition\r\n  /* jshint strict: false */ /*globals define, module, require */\r\n  if ( typeof define == 'function' && define.amd ) {\r\n    // AMD\r\n    define( [\r\n        'outlayer/outlayer',\r\n        'get-size/get-size',\r\n        'desandro-matches-selector/matches-selector',\r\n        'fizzy-ui-utils/utils',\r\n        './item',\r\n        './layout-mode',\r\n        // include default layout modes\r\n        './layout-modes/masonry',\r\n        './layout-modes/fit-rows',\r\n        './layout-modes/vertical'\r\n      ],\r\n      function( Outlayer, getSize, matchesSelector, utils, Item, LayoutMode ) {\r\n        return factory( window, Outlayer, getSize, matchesSelector, utils, Item, LayoutMode );\r\n      });\r\n  } else if ( typeof module == 'object' && module.exports ) {\r\n    // CommonJS\r\n    module.exports = factory(\r\n      window,\r\n      require('outlayer'),\r\n      require('get-size'),\r\n      require('desandro-matches-selector'),\r\n      require('fizzy-ui-utils'),\r\n      require('./item'),\r\n      require('./layout-mode'),\r\n      // include default layout modes\r\n      require('./layout-modes/masonry'),\r\n      require('./layout-modes/fit-rows'),\r\n      require('./layout-modes/vertical')\r\n    );\r\n  } else {\r\n    // browser global\r\n    window.Isotope = factory(\r\n      window,\r\n      window.Outlayer,\r\n      window.getSize,\r\n      window.matchesSelector,\r\n      window.fizzyUIUtils,\r\n      window.Isotope.Item,\r\n      window.Isotope.LayoutMode\r\n    );\r\n  }\r\n\r\n}( window, function factory( window, Outlayer, getSize, matchesSelector, utils,\r\n  Item, LayoutMode ) {\r\n\r\n'use strict';\r\n\r\n// -------------------------- vars -------------------------- //\r\n\r\nvar jQuery = window.jQuery;\r\n\r\n// -------------------------- helpers -------------------------- //\r\n\r\nvar trim = String.prototype.trim ?\r\n  function( str ) {\r\n    return str.trim();\r\n  } :\r\n  function( str ) {\r\n    return str.replace( /^\\s+|\\s+$/g, '' );\r\n  };\r\n\r\n// -------------------------- isotopeDefinition -------------------------- //\r\n\r\n  // create an Outlayer layout class\r\n  var Isotope = Outlayer.create( 'isotope', {\r\n    layoutMode: 'masonry',\r\n    isJQueryFiltering: true,\r\n    sortAscending: true\r\n  });\r\n\r\n  Isotope.Item = Item;\r\n  Isotope.LayoutMode = LayoutMode;\r\n\r\n  var proto = Isotope.prototype;\r\n\r\n  proto._create = function() {\r\n    this.itemGUID = 0;\r\n    // functions that sort items\r\n    this._sorters = {};\r\n    this._getSorters();\r\n    // call super\r\n    Outlayer.prototype._create.call( this );\r\n\r\n    // create layout modes\r\n    this.modes = {};\r\n    // start filteredItems with all items\r\n    this.filteredItems = this.items;\r\n    // keep of track of sortBys\r\n    this.sortHistory = [ 'original-order' ];\r\n    // create from registered layout modes\r\n    for ( var name in LayoutMode.modes ) {\r\n      this._initLayoutMode( name );\r\n    }\r\n  };\r\n\r\n  proto.reloadItems = function() {\r\n    // reset item ID counter\r\n    this.itemGUID = 0;\r\n    // call super\r\n    Outlayer.prototype.reloadItems.call( this );\r\n  };\r\n\r\n  proto._itemize = function() {\r\n    var items = Outlayer.prototype._itemize.apply( this, arguments );\r\n    // assign ID for original-order\r\n    for ( var i=0; i < items.length; i++ ) {\r\n      var item = items[i];\r\n      item.id = this.itemGUID++;\r\n    }\r\n    this._updateItemsSortData( items );\r\n    return items;\r\n  };\r\n\r\n\r\n  // -------------------------- layout -------------------------- //\r\n\r\n  proto._initLayoutMode = function( name ) {\r\n    var Mode = LayoutMode.modes[ name ];\r\n    // set mode options\r\n    // HACK extend initial options, back-fill in default options\r\n    var initialOpts = this.options[ name ] || {};\r\n    this.options[ name ] = Mode.options ?\r\n      utils.extend( Mode.options, initialOpts ) : initialOpts;\r\n    // init layout mode instance\r\n    this.modes[ name ] = new Mode( this );\r\n  };\r\n\r\n\r\n  proto.layout = function() {\r\n    // if first time doing layout, do all magic\r\n    if ( !this._isLayoutInited && this._getOption('initLayout') ) {\r\n      this.arrange();\r\n      return;\r\n    }\r\n    this._layout();\r\n  };\r\n\r\n  // private method to be used in layout() & magic()\r\n  proto._layout = function() {\r\n    // don't animate first layout\r\n    var isInstant = this._getIsInstant();\r\n    // layout flow\r\n    this._resetLayout();\r\n    this._manageStamps();\r\n    this.layoutItems( this.filteredItems, isInstant );\r\n\r\n    // flag for initalized\r\n    this._isLayoutInited = true;\r\n  };\r\n\r\n  // filter + sort + layout\r\n  proto.arrange = function( opts ) {\r\n    // set any options pass\r\n    this.option( opts );\r\n    this._getIsInstant();\r\n    // filter, sort, and layout\r\n\r\n    // filter\r\n    var filtered = this._filter( this.items );\r\n    this.filteredItems = filtered.matches;\r\n\r\n    this._bindArrangeComplete();\r\n\r\n    if ( this._isInstant ) {\r\n      this._noTransition( this._hideReveal, [ filtered ] );\r\n    } else {\r\n      this._hideReveal( filtered );\r\n    }\r\n\r\n    this._sort();\r\n    this._layout();\r\n  };\r\n  // alias to _init for main plugin method\r\n  proto._init = proto.arrange;\r\n\r\n  proto._hideReveal = function( filtered ) {\r\n    this.reveal( filtered.needReveal );\r\n    this.hide( filtered.needHide );\r\n  };\r\n\r\n  // HACK\r\n  // Don't animate/transition first layout\r\n  // Or don't animate/transition other layouts\r\n  proto._getIsInstant = function() {\r\n    var isLayoutInstant = this._getOption('layoutInstant');\r\n    var isInstant = isLayoutInstant !== undefined ? isLayoutInstant :\r\n      !this._isLayoutInited;\r\n    this._isInstant = isInstant;\r\n    return isInstant;\r\n  };\r\n\r\n  // listen for layoutComplete, hideComplete and revealComplete\r\n  // to trigger arrangeComplete\r\n  proto._bindArrangeComplete = function() {\r\n    // listen for 3 events to trigger arrangeComplete\r\n    var isLayoutComplete, isHideComplete, isRevealComplete;\r\n    var _this = this;\r\n    function arrangeParallelCallback() {\r\n      if ( isLayoutComplete && isHideComplete && isRevealComplete ) {\r\n        _this.dispatchEvent( 'arrangeComplete', null, [ _this.filteredItems ] );\r\n      }\r\n    }\r\n    this.once( 'layoutComplete', function() {\r\n      isLayoutComplete = true;\r\n      arrangeParallelCallback();\r\n    });\r\n    this.once( 'hideComplete', function() {\r\n      isHideComplete = true;\r\n      arrangeParallelCallback();\r\n    });\r\n    this.once( 'revealComplete', function() {\r\n      isRevealComplete = true;\r\n      arrangeParallelCallback();\r\n    });\r\n  };\r\n\r\n  // -------------------------- filter -------------------------- //\r\n\r\n  proto._filter = function( items ) {\r\n    var filter = this.options.filter;\r\n    filter = filter || '*';\r\n    var matches = [];\r\n    var hiddenMatched = [];\r\n    var visibleUnmatched = [];\r\n\r\n    var test = this._getFilterTest( filter );\r\n\r\n    // test each item\r\n    for ( var i=0; i < items.length; i++ ) {\r\n      var item = items[i];\r\n      if ( item.isIgnored ) {\r\n        continue;\r\n      }\r\n      // add item to either matched or unmatched group\r\n      var isMatched = test( item );\r\n      // item.isFilterMatched = isMatched;\r\n      // add to matches if its a match\r\n      if ( isMatched ) {\r\n        matches.push( item );\r\n      }\r\n      // add to additional group if item needs to be hidden or revealed\r\n      if ( isMatched && item.isHidden ) {\r\n        hiddenMatched.push( item );\r\n      } else if ( !isMatched && !item.isHidden ) {\r\n        visibleUnmatched.push( item );\r\n      }\r\n    }\r\n\r\n    // return collections of items to be manipulated\r\n    return {\r\n      matches: matches,\r\n      needReveal: hiddenMatched,\r\n      needHide: visibleUnmatched\r\n    };\r\n  };\r\n\r\n  // get a jQuery, function, or a matchesSelector test given the filter\r\n  proto._getFilterTest = function( filter ) {\r\n    if ( jQuery && this.options.isJQueryFiltering ) {\r\n      // use jQuery\r\n      return function( item ) {\r\n        return jQuery( item.element ).is( filter );\r\n      };\r\n    }\r\n    if ( typeof filter == 'function' ) {\r\n      // use filter as function\r\n      return function( item ) {\r\n        return filter( item.element );\r\n      };\r\n    }\r\n    // default, use filter as selector string\r\n    return function( item ) {\r\n      return matchesSelector( item.element, filter );\r\n    };\r\n  };\r\n\r\n  // -------------------------- sorting -------------------------- //\r\n\r\n  /**\r\n   * @params {Array} elems\r\n   * @public\r\n   */\r\n  proto.updateSortData = function( elems ) {\r\n    // get items\r\n    var items;\r\n    if ( elems ) {\r\n      elems = utils.makeArray( elems );\r\n      items = this.getItems( elems );\r\n    } else {\r\n      // update all items if no elems provided\r\n      items = this.items;\r\n    }\r\n\r\n    this._getSorters();\r\n    this._updateItemsSortData( items );\r\n  };\r\n\r\n  proto._getSorters = function() {\r\n    var getSortData = this.options.getSortData;\r\n    for ( var key in getSortData ) {\r\n      var sorter = getSortData[ key ];\r\n      this._sorters[ key ] = mungeSorter( sorter );\r\n    }\r\n  };\r\n\r\n  /**\r\n   * @params {Array} items - of Isotope.Items\r\n   * @private\r\n   */\r\n  proto._updateItemsSortData = function( items ) {\r\n    // do not update if no items\r\n    var len = items && items.length;\r\n\r\n    for ( var i=0; len && i < len; i++ ) {\r\n      var item = items[i];\r\n      item.updateSortData();\r\n    }\r\n  };\r\n\r\n  // ----- munge sorter ----- //\r\n\r\n  // encapsulate this, as we just need mungeSorter\r\n  // other functions in here are just for munging\r\n  var mungeSorter = ( function() {\r\n    // add a magic layer to sorters for convienent shorthands\r\n    // `.foo-bar` will use the text of .foo-bar querySelector\r\n    // `[foo-bar]` will use attribute\r\n    // you can also add parser\r\n    // `.foo-bar parseInt` will parse that as a number\r\n    function mungeSorter( sorter ) {\r\n      // if not a string, return function or whatever it is\r\n      if ( typeof sorter != 'string' ) {\r\n        return sorter;\r\n      }\r\n      // parse the sorter string\r\n      var args = trim( sorter ).split(' ');\r\n      var query = args[0];\r\n      // check if query looks like [an-attribute]\r\n      var attrMatch = query.match( /^\\[(.+)\\]$/ );\r\n      var attr = attrMatch && attrMatch[1];\r\n      var getValue = getValueGetter( attr, query );\r\n      // use second argument as a parser\r\n      var parser = Isotope.sortDataParsers[ args[1] ];\r\n      // parse the value, if there was a parser\r\n      sorter = parser ? function( elem ) {\r\n        return elem && parser( getValue( elem ) );\r\n      } :\r\n      // otherwise just return value\r\n      function( elem ) {\r\n        return elem && getValue( elem );\r\n      };\r\n\r\n      return sorter;\r\n    }\r\n\r\n    // get an attribute getter, or get text of the querySelector\r\n    function getValueGetter( attr, query ) {\r\n      // if query looks like [foo-bar], get attribute\r\n      if ( attr ) {\r\n        return function getAttribute( elem ) {\r\n          return elem.getAttribute( attr );\r\n        };\r\n      }\r\n\r\n      // otherwise, assume its a querySelector, and get its text\r\n      return function getChildText( elem ) {\r\n        var child = elem.querySelector( query );\r\n        return child && child.textContent;\r\n      };\r\n    }\r\n\r\n    return mungeSorter;\r\n  })();\r\n\r\n  // parsers used in getSortData shortcut strings\r\n  Isotope.sortDataParsers = {\r\n    'parseInt': function( val ) {\r\n      return parseInt( val, 10 );\r\n    },\r\n    'parseFloat': function( val ) {\r\n      return parseFloat( val );\r\n    }\r\n  };\r\n\r\n  // ----- sort method ----- //\r\n\r\n  // sort filteredItem order\r\n  proto._sort = function() {\r\n    if ( !this.options.sortBy ) {\r\n      return;\r\n    }\r\n    // keep track of sortBy History\r\n    var sortBys = utils.makeArray( this.options.sortBy );\r\n    if ( !this._getIsSameSortBy( sortBys ) ) {\r\n      // concat all sortBy and sortHistory, add to front, oldest goes in last\r\n      this.sortHistory = sortBys.concat( this.sortHistory );\r\n    }\r\n    // sort magic\r\n    var itemSorter = getItemSorter( this.sortHistory, this.options.sortAscending );\r\n    this.filteredItems.sort( itemSorter );\r\n  };\r\n\r\n  // check if sortBys is same as start of sortHistory\r\n  proto._getIsSameSortBy = function( sortBys ) {\r\n    for ( var i=0; i < sortBys.length; i++ ) {\r\n      if ( sortBys[i] != this.sortHistory[i] ) {\r\n        return false;\r\n      }\r\n    }\r\n    return true;\r\n  };\r\n\r\n  // returns a function used for sorting\r\n  function getItemSorter( sortBys, sortAsc ) {\r\n    return function sorter( itemA, itemB ) {\r\n      // cycle through all sortKeys\r\n      for ( var i = 0; i < sortBys.length; i++ ) {\r\n        var sortBy = sortBys[i];\r\n        var a = itemA.sortData[ sortBy ];\r\n        var b = itemB.sortData[ sortBy ];\r\n        if ( a > b || a < b ) {\r\n          // if sortAsc is an object, use the value given the sortBy key\r\n          var isAscending = sortAsc[ sortBy ] !== undefined ? sortAsc[ sortBy ] : sortAsc;\r\n          var direction = isAscending ? 1 : -1;\r\n          return ( a > b ? 1 : -1 ) * direction;\r\n        }\r\n      }\r\n      return 0;\r\n    };\r\n  }\r\n\r\n  // -------------------------- methods -------------------------- //\r\n\r\n  // get layout mode\r\n  proto._mode = function() {\r\n    var layoutMode = this.options.layoutMode;\r\n    var mode = this.modes[ layoutMode ];\r\n    if ( !mode ) {\r\n      // TODO console.error\r\n      throw new Error( 'No layout mode: ' + layoutMode );\r\n    }\r\n    // HACK sync mode's options\r\n    // any options set after init for layout mode need to be synced\r\n    mode.options = this.options[ layoutMode ];\r\n    return mode;\r\n  };\r\n\r\n  proto._resetLayout = function() {\r\n    // trigger original reset layout\r\n    Outlayer.prototype._resetLayout.call( this );\r\n    this._mode()._resetLayout();\r\n  };\r\n\r\n  proto._getItemLayoutPosition = function( item  ) {\r\n    return this._mode()._getItemLayoutPosition( item );\r\n  };\r\n\r\n  proto._manageStamp = function( stamp ) {\r\n    this._mode()._manageStamp( stamp );\r\n  };\r\n\r\n  proto._getContainerSize = function() {\r\n    return this._mode()._getContainerSize();\r\n  };\r\n\r\n  proto.needsResizeLayout = function() {\r\n    return this._mode().needsResizeLayout();\r\n  };\r\n\r\n  // -------------------------- adding & removing -------------------------- //\r\n\r\n  // HEADS UP overwrites default Outlayer appended\r\n  proto.appended = function( elems ) {\r\n    var items = this.addItems( elems );\r\n    if ( !items.length ) {\r\n      return;\r\n    }\r\n    // filter, layout, reveal new items\r\n    var filteredItems = this._filterRevealAdded( items );\r\n    // add to filteredItems\r\n    this.filteredItems = this.filteredItems.concat( filteredItems );\r\n  };\r\n\r\n  // HEADS UP overwrites default Outlayer prepended\r\n  proto.prepended = function( elems ) {\r\n    var items = this._itemize( elems );\r\n    if ( !items.length ) {\r\n      return;\r\n    }\r\n    // start new layout\r\n    this._resetLayout();\r\n    this._manageStamps();\r\n    // filter, layout, reveal new items\r\n    var filteredItems = this._filterRevealAdded( items );\r\n    // layout previous items\r\n    this.layoutItems( this.filteredItems );\r\n    // add to items and filteredItems\r\n    this.filteredItems = filteredItems.concat( this.filteredItems );\r\n    this.items = items.concat( this.items );\r\n  };\r\n\r\n  proto._filterRevealAdded = function( items ) {\r\n    var filtered = this._filter( items );\r\n    this.hide( filtered.needHide );\r\n    // reveal all new items\r\n    this.reveal( filtered.matches );\r\n    // layout new items, no transition\r\n    this.layoutItems( filtered.matches, true );\r\n    return filtered.matches;\r\n  };\r\n\r\n  /**\r\n   * Filter, sort, and layout newly-appended item elements\r\n   * @param {Array or NodeList or Element} elems\r\n   */\r\n  proto.insert = function( elems ) {\r\n    var items = this.addItems( elems );\r\n    if ( !items.length ) {\r\n      return;\r\n    }\r\n    // append item elements\r\n    var i, item;\r\n    var len = items.length;\r\n    for ( i=0; i < len; i++ ) {\r\n      item = items[i];\r\n      this.element.appendChild( item.element );\r\n    }\r\n    // filter new stuff\r\n    var filteredInsertItems = this._filter( items ).matches;\r\n    // set flag\r\n    for ( i=0; i < len; i++ ) {\r\n      items[i].isLayoutInstant = true;\r\n    }\r\n    this.arrange();\r\n    // reset flag\r\n    for ( i=0; i < len; i++ ) {\r\n      delete items[i].isLayoutInstant;\r\n    }\r\n    this.reveal( filteredInsertItems );\r\n  };\r\n\r\n  var _remove = proto.remove;\r\n  proto.remove = function( elems ) {\r\n    elems = utils.makeArray( elems );\r\n    var removeItems = this.getItems( elems );\r\n    // do regular thing\r\n    _remove.call( this, elems );\r\n    // bail if no items to remove\r\n    var len = removeItems && removeItems.length;\r\n    // remove elems from filteredItems\r\n    for ( var i=0; len && i < len; i++ ) {\r\n      var item = removeItems[i];\r\n      // remove item from collection\r\n      utils.removeFrom( this.filteredItems, item );\r\n    }\r\n  };\r\n\r\n  proto.shuffle = function() {\r\n    // update random sortData\r\n    for ( var i=0; i < this.items.length; i++ ) {\r\n      var item = this.items[i];\r\n      item.sortData.random = Math.random();\r\n    }\r\n    this.options.sortBy = 'random';\r\n    this._sort();\r\n    this._layout();\r\n  };\r\n\r\n  /**\r\n   * trigger fn without transition\r\n   * kind of hacky to have this in the first place\r\n   * @param {Function} fn\r\n   * @param {Array} args\r\n   * @returns ret\r\n   * @private\r\n   */\r\n  proto._noTransition = function( fn, args ) {\r\n    // save transitionDuration before disabling\r\n    var transitionDuration = this.options.transitionDuration;\r\n    // disable transition\r\n    this.options.transitionDuration = 0;\r\n    // do it\r\n    var returnValue = fn.apply( this, args );\r\n    // re-enable transition for reveal\r\n    this.options.transitionDuration = transitionDuration;\r\n    return returnValue;\r\n  };\r\n\r\n  // ----- helper methods ----- //\r\n\r\n  /**\r\n   * getter method for getting filtered item elements\r\n   * @returns {Array} elems - collection of item elements\r\n   */\r\n  proto.getFilteredItemElements = function() {\r\n    return this.filteredItems.map( function( item ) {\r\n      return item.element;\r\n    });\r\n  };\r\n\r\n  // -----  ----- //\r\n\r\n  return Isotope;\r\n\r\n}));\r\n"]},"metadata":{},"sourceType":"script"}